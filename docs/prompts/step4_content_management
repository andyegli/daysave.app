As an experienced full-stack developer, implement the content management system for daysave.app v1.0.1, a privacy-focused Node.js web application using Express and Sequelize. The implementation should include:

1. A `src/controllers/contentController.js` file with methods for:
   - `createContent`: Creates content with type (short, video, text, clip, file) and source (youtube, facebook, etc.).
   - `getContent`: Retrieves content with filtering by tag, search, date, type, and source.
   - `updateContent`: Updates content (title, summary, etc.).
   - `deleteContent`: Soft deletes content.
   - `batchAction`: Handles batch delete, edit, archive, and share with contacts/groups.
   - `addComment`: Adds comments with source-based coloring.
   - `addTag`: Adds tags with source-based coloring.
2. A `src/routes/contentRoutes.js` file defining endpoints:
   - GET `/content`: Lists content with filtering options.
   - POST `/content`: Creates new content.
   - PUT `/content/:id`: Updates content.
   - DELETE `/content/:id`: Deletes content.
   - POST `/content/batch`: Performs batch actions.
   - POST `/content/:id/comment`: Adds a comment.
   - POST `/content/:id/tag`: Adds a tag.
   - POST `/content/:id/share`: Shares content with contacts/groups.
3. Ensure:
   - Content display in `views/dashboard.ejs` uses a blog-style layout (vertical blocks with title, preview on left, tags/comments below), with colors (#FFD05D, #20D6D1, #16C3C6, #008AA0) for source-based styling (e.g., youtube: #FFD05D, facebook: #20D6D1).
   - Filtering uses query parameters (e.g., ?tag=tech&date=2025-05-01).
   - Batch actions support multi-select with buttons for delete, edit, archive, share.
   - Integration with Sequelize models (Content, Comments, Tags, ContentShares).
   - Placeholder hooks for AI analysis (e.g., call to future /api/ai/analyze endpoint).
   - JSDoc comments for documentation.
   - Version: daysave.app v1.0.1 mentioned in comments.
   - Modular design for future microservices (e.g., separate content service).

Wrap the entire code in an <xaiArtifact> tag with a unique UUID, title "Content Management", and contentType "text/plain".